<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>src.master.Match</title>
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Source code for src.master.Match</h1><div class="highlight"><pre>
<span></span><span class="kn">from</span> <span class="nn">src.expression</span> <span class="k">import</span> <span class="n">Sku</span>
<span class="kn">from</span> <span class="nn">src.Utils</span> <span class="k">import</span> <span class="n">sku_utils</span><span class="p">,</span> <span class="n">scoring_utils</span>


<div class="viewcode-block" id="Match"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.Match">[docs]</a><span class="k">class</span> <span class="nc">Match</span><span class="p">:</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">pass</span></div>


<div class="viewcode-block" id="MatchSku"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku">[docs]</a><span class="k">class</span> <span class="nc">MatchSku</span><span class="p">(</span><span class="n">Match</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>

        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">()</span>
        <span class="c1"># stores the list of corpus</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">corpora</span> <span class="o">=</span> <span class="p">[]</span>

        <span class="c1"># stores the dict of terms mapped to their corpus</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">term_dict</span> <span class="o">=</span> <span class="p">{}</span>

        <span class="c1"># dict mapping a cluster to its possible sku objects</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">cluster_dict</span> <span class="o">=</span> <span class="p">{}</span>

        <span class="c1"># stores set of sku objects in the Match class</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">sku_set</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>

        <span class="c1"># stores list of items</span>
        <span class="c1"># self.item_list = []</span>

        <span class="c1"># caches the unused terms added in the Match Class</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">unused_dict</span> <span class="o">=</span> <span class="p">{}</span>

        <span class="c1"># stores the items that were simply learning and haven&#39;t been used for updating popularity</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">pending_updates</span> <span class="o">=</span> <span class="nb">set</span><span class="p">()</span>

        <span class="c1"># caches the item name to a list of sku objects with score</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">item_name_cache</span> <span class="o">=</span> <span class="p">{}</span>

<div class="viewcode-block" id="MatchSku.add_corpus"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.add_corpus">[docs]</a>    <span class="k">def</span> <span class="nf">add_corpus</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">corpus</span><span class="p">):</span>

        <span class="c1"># assert type(corpus) is Corpus.Corpus</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">corpora</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">corpus</span><span class="p">)</span>
        <span class="k">return</span> <span class="mi">1</span></div>

<div class="viewcode-block" id="MatchSku.add_leader_term"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.add_leader_term">[docs]</a>    <span class="k">def</span> <span class="nf">add_leader_term</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">leader</span><span class="p">,</span> <span class="n">sku</span><span class="p">):</span>

        <span class="n">leader_corpus</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">match_term_corpus</span><span class="p">(</span><span class="n">leader</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">leader_corpus</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
            <span class="c1"># select appropriate corpus to add leader to</span>
            <span class="n">leader_corpus</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">corpora</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

        <span class="c1"># add leader term to cache</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">term_dict</span><span class="p">[</span><span class="n">leader</span><span class="p">]</span> <span class="o">=</span> <span class="n">leader_corpus</span>

        <span class="c1"># add new leader to corpus and get unused terms that got matched when new leader was added</span>
        <span class="n">temp_terms</span> <span class="o">=</span> <span class="n">leader_corpus</span><span class="o">.</span><span class="n">add_leader</span><span class="p">(</span><span class="n">leader</span><span class="p">)</span>

        <span class="c1"># remove those terms from unused cache</span>
        <span class="k">for</span> <span class="n">term</span> <span class="ow">in</span> <span class="n">temp_terms</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">unused_dict</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="n">term</span><span class="p">,</span> <span class="kc">None</span><span class="p">)</span>

        <span class="c1"># get the cluster to which the leader term belongs</span>
        <span class="n">leader_cluster</span> <span class="o">=</span> <span class="n">leader_corpus</span><span class="o">.</span><span class="n">match_term_cluster</span><span class="p">(</span><span class="n">leader</span><span class="p">)</span>

        <span class="c1"># add relevant information to sku object</span>
        <span class="n">sku</span><span class="o">.</span><span class="n">add_cluster</span><span class="p">(</span><span class="n">leader</span><span class="p">,</span> <span class="n">leader_cluster</span><span class="p">)</span>

        <span class="n">cluster_sku_set</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cluster_dict</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">leader_cluster</span><span class="p">,</span> <span class="nb">set</span><span class="p">())</span>
        <span class="n">cluster_sku_set</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">sku</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">cluster_dict</span><span class="p">[</span><span class="n">leader_cluster</span><span class="p">]</span> <span class="o">=</span> <span class="n">cluster_sku_set</span>

        <span class="k">return</span> <span class="mi">1</span></div>

<div class="viewcode-block" id="MatchSku.match_term_corpus"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.match_term_corpus">[docs]</a>    <span class="k">def</span> <span class="nf">match_term_corpus</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">term</span><span class="p">):</span>

        <span class="k">if</span> <span class="n">term</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">unused_dict</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">unused_dict</span><span class="p">[</span><span class="n">term</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">return</span> <span class="kc">None</span>

        <span class="k">if</span> <span class="n">term</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">term_dict</span><span class="p">:</span>
            <span class="n">term_corpus</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">term_dict</span><span class="p">[</span><span class="n">term</span><span class="p">]</span>

            <span class="n">term_corpus</span><span class="o">.</span><span class="n">add_term</span><span class="p">(</span><span class="n">term</span><span class="p">)</span>
            <span class="c1"># term_cluster = term_corpus.get_cached_term_cluster(term)</span>
            <span class="k">return</span> <span class="n">term_corpus</span>

        <span class="c1"># else</span>

        <span class="n">term_corpus</span> <span class="o">=</span> <span class="kc">None</span>

        <span class="k">for</span> <span class="n">corpus</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">corpora</span><span class="p">:</span>
            <span class="n">success_flag</span> <span class="o">=</span> <span class="n">corpus</span><span class="o">.</span><span class="n">add_term</span><span class="p">(</span><span class="n">term</span><span class="p">)</span>

            <span class="k">if</span> <span class="n">success_flag</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">term_corpus</span> <span class="o">=</span> <span class="n">corpus</span>
                <span class="k">break</span>

        <span class="k">if</span> <span class="n">term_corpus</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">unused_dict</span><span class="p">[</span><span class="n">term</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
            <span class="k">return</span> <span class="kc">None</span>

        <span class="n">term_corpus</span><span class="o">.</span><span class="n">add_term</span><span class="p">(</span><span class="n">term</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">term_corpus</span></div>

<div class="viewcode-block" id="MatchSku.add_term"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.add_term">[docs]</a>    <span class="k">def</span> <span class="nf">add_term</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">term</span><span class="p">,</span> <span class="n">item</span><span class="p">):</span>

        <span class="n">term_corpus</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">match_term_corpus</span><span class="p">(</span><span class="n">term</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">term_corpus</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
            <span class="k">return</span> <span class="mi">0</span>

        <span class="n">term_cluster</span> <span class="o">=</span> <span class="n">term_corpus</span><span class="o">.</span><span class="n">match_term_cluster</span><span class="p">(</span><span class="n">term</span><span class="p">)</span>
        <span class="n">item</span><span class="o">.</span><span class="n">add_cluster</span><span class="p">(</span><span class="n">term</span><span class="p">,</span> <span class="n">term_cluster</span><span class="p">)</span>
        <span class="c1"># term_corpus.add_term(term)</span>

        <span class="bp">self</span><span class="o">.</span><span class="n">term_dict</span><span class="p">[</span><span class="n">term</span><span class="p">]</span> <span class="o">=</span> <span class="n">term_corpus</span>

        <span class="k">return</span> <span class="mi">1</span></div>

<div class="viewcode-block" id="MatchSku.add_sku"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.add_sku">[docs]</a>    <span class="k">def</span> <span class="nf">add_sku</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sku</span><span class="p">):</span>

        <span class="k">assert</span> <span class="nb">type</span><span class="p">(</span><span class="n">sku</span><span class="p">)</span> <span class="ow">is</span> <span class="n">Sku</span><span class="o">.</span><span class="n">Sku</span>

        <span class="bp">self</span><span class="o">.</span><span class="n">sku_set</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">sku</span><span class="p">)</span>

        <span class="k">for</span> <span class="n">term</span> <span class="ow">in</span> <span class="n">sku</span><span class="o">.</span><span class="n">terms</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">add_leader_term</span><span class="p">(</span><span class="n">term</span><span class="p">,</span> <span class="n">sku</span><span class="p">)</span></div>

<div class="viewcode-block" id="MatchSku.add_item"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.add_item">[docs]</a>    <span class="k">def</span> <span class="nf">add_item</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">item</span><span class="p">):</span>

        <span class="c1"># self.item_list.append(item)</span>

        <span class="k">for</span> <span class="n">term</span> <span class="ow">in</span> <span class="n">item</span><span class="o">.</span><span class="n">terms</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">add_term</span><span class="p">(</span><span class="n">term</span><span class="p">,</span> <span class="n">item</span><span class="p">)</span></div>

<div class="viewcode-block" id="MatchSku.match_item"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.match_item">[docs]</a>    <span class="k">def</span> <span class="nf">match_item</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">item</span><span class="p">,</span> <span class="n">learning_flag</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>

        <span class="c1"># sku list containing score i.e. count of common clusters</span>
        <span class="n">sku_list</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_sku_list_from_item_clusters</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">sku_list</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">[]</span>
        <span class="n">max_score</span> <span class="o">=</span> <span class="nb">max</span><span class="p">([</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">sku_list</span><span class="p">])</span>

        <span class="k">if</span> <span class="n">max_score</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">[]</span>

        <span class="n">sku_list</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="n">max_score</span><span class="p">,</span> <span class="n">sku_list</span><span class="p">))</span>

        <span class="n">sku_list</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">sku_list</span><span class="p">))</span>
        <span class="c1"># print(sku_list)</span>
        <span class="n">sku_list</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">sku_utils</span><span class="o">.</span><span class="n">meets_match_count_threshold</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="n">x</span><span class="p">),</span> <span class="n">sku_list</span><span class="p">))</span>
        <span class="n">sku_list</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">scoring_utils</span><span class="o">.</span><span class="n">get_score</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="n">x</span><span class="p">)),</span> <span class="n">sku_list</span><span class="p">))</span>
        <span class="n">sku_list</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

        <span class="k">for</span> <span class="n">sku</span> <span class="ow">in</span> <span class="n">sku_list</span><span class="p">:</span>
            <span class="n">sku</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">add_dzer</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">dzer_id</span><span class="p">)</span>
            <span class="n">sku</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">add_user</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">user_id</span><span class="p">)</span>

        <span class="n">multiplier</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">sku_list</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">sku</span> <span class="ow">in</span> <span class="n">sku_list</span><span class="p">:</span>
            <span class="n">sku</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">update_count</span><span class="p">(</span><span class="n">item</span><span class="o">.</span><span class="n">quantity</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">learning_flag</span><span class="p">:</span>
                <span class="n">sku</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">update_score</span><span class="p">(</span><span class="n">sku</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="n">multiplier</span><span class="p">)</span>
                <span class="bp">self</span><span class="o">.</span><span class="n">pending_updates</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">sku</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">sku</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">update_popularity</span><span class="p">(</span><span class="n">sku</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="n">multiplier</span><span class="p">)</span>
            <span class="n">multiplier</span> <span class="o">/=</span> <span class="mi">2</span>

        <span class="k">return</span> <span class="n">sku_list</span></div>

<div class="viewcode-block" id="MatchSku.batch_update_sku"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.batch_update_sku">[docs]</a>    <span class="k">def</span> <span class="nf">batch_update_sku</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>

        <span class="k">for</span> <span class="n">sku</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">pending_updates</span><span class="p">:</span>
            <span class="n">sku</span><span class="o">.</span><span class="n">setup_popularity</span><span class="p">()</span>

        <span class="k">return</span> <span class="mi">1</span></div>

<div class="viewcode-block" id="MatchSku.get_term_cluster"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.get_term_cluster">[docs]</a>    <span class="k">def</span> <span class="nf">get_term_cluster</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">term</span><span class="p">):</span>

        <span class="n">term_corpus</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">match_term_corpus</span><span class="p">(</span><span class="n">term</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">term_corpus</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
            <span class="k">return</span> <span class="kc">None</span>

        <span class="k">return</span> <span class="n">term_corpus</span><span class="o">.</span><span class="n">match_term_cluster</span><span class="p">(</span><span class="n">term</span><span class="p">)</span></div>

<div class="viewcode-block" id="MatchSku.get_sku_list_from_item_clusters"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.get_sku_list_from_item_clusters">[docs]</a>    <span class="k">def</span> <span class="nf">get_sku_list_from_item_clusters</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">item</span><span class="p">):</span>

        <span class="k">if</span> <span class="n">item</span><span class="o">.</span><span class="n">name</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">item_name_cache</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">item_name_cache</span><span class="p">[</span><span class="n">item</span><span class="o">.</span><span class="n">name</span><span class="p">]</span>

        <span class="n">sku_score_dict</span> <span class="o">=</span> <span class="p">{}</span>

        <span class="k">for</span> <span class="n">item_term</span> <span class="ow">in</span> <span class="n">item</span><span class="o">.</span><span class="n">terms</span><span class="p">:</span>
            <span class="n">item_term_cluster</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_term_cluster</span><span class="p">(</span><span class="n">item_term</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">item_term_cluster</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
                <span class="k">continue</span>

            <span class="n">item</span><span class="o">.</span><span class="n">add_cluster</span><span class="p">(</span><span class="n">item_term</span><span class="p">,</span> <span class="n">item_term_cluster</span><span class="p">)</span>
            <span class="n">item_term_sku_set</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cluster_dict</span><span class="p">[</span><span class="n">item_term_cluster</span><span class="p">]</span>
            <span class="k">for</span> <span class="n">sku</span> <span class="ow">in</span> <span class="n">item_term_sku_set</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">sku</span> <span class="ow">in</span> <span class="n">sku_score_dict</span><span class="p">:</span>
                    <span class="n">sku_score_dict</span><span class="p">[</span><span class="n">sku</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">sku_score_dict</span><span class="p">[</span><span class="n">sku</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>

        <span class="n">item_sku_with_score</span> <span class="o">=</span> <span class="p">[(</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">sku_score_dict</span><span class="o">.</span><span class="n">items</span><span class="p">()]</span>
        <span class="n">item_sku_with_score</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

        <span class="bp">self</span><span class="o">.</span><span class="n">item_name_cache</span><span class="p">[</span><span class="n">item</span><span class="o">.</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">item_sku_with_score</span>

        <span class="k">return</span> <span class="n">item_sku_with_score</span></div>

<div class="viewcode-block" id="MatchSku.add_and_match_item_list"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.add_and_match_item_list">[docs]</a>    <span class="k">def</span> <span class="nf">add_and_match_item_list</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">item_list</span><span class="p">):</span>

        <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">item_list</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">add_item</span><span class="p">(</span><span class="n">item</span><span class="p">)</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">match_item</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="n">learning_flag</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">batch_update_sku</span><span class="p">()</span>
        <span class="k">return</span> <span class="mi">1</span></div>

<div class="viewcode-block" id="MatchSku.get_sku_with_clusters_from_term_prefix_clusters"><a class="viewcode-back" href="../../../src.master.xhtml#src.master.Match.MatchSku.get_sku_with_clusters_from_term_prefix_clusters">[docs]</a>    <span class="k">def</span> <span class="nf">get_sku_with_clusters_from_term_prefix_clusters</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">term</span><span class="p">):</span>

        <span class="c1"># term_cluster = self.get_term_cluster(term)</span>

        <span class="c1"># if term_cluster:</span>
        <span class="c1">#     return self.cluster_dict[term_cluster]</span>

        <span class="n">eligible_clusters</span><span class="p">,</span> <span class="n">score</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">corpora</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get_eligible_clusters</span><span class="p">(</span><span class="n">term</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">score</span> <span class="o">&lt;</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="nb">len</span><span class="p">(</span><span class="n">term</span><span class="p">)</span> <span class="ow">and</span> <span class="n">score</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
            <span class="k">return</span> <span class="nb">set</span><span class="p">(),</span> <span class="nb">set</span><span class="p">()</span>

        <span class="n">eligible_skus</span> <span class="o">=</span> <span class="p">[]</span>

        <span class="k">for</span> <span class="n">cluster</span> <span class="ow">in</span> <span class="n">eligible_clusters</span><span class="p">:</span>
            <span class="n">eligible_skus</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">cluster_dict</span><span class="p">[</span><span class="n">cluster</span><span class="p">])</span>

        <span class="k">return</span> <span class="nb">set</span><span class="p">(</span><span class="n">eligible_skus</span><span class="p">),</span> <span class="nb">set</span><span class="p">(</span><span class="n">eligible_clusters</span><span class="p">)</span></div></div>
        <span class="c1"># return reduce(lambda a, b: a.union(b), eligible_skus)</span>









</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>